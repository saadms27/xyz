import{h as c,a as f,e as o,l as m}from"./auth.fdd9f60a.js";import{I as w,Y as a}from"./index.ce7ea90d.js";import{a as n}from"./axios.1ff92d29.js";const D=w("rewatchRequestsS",{state:()=>({working:!1,list:[],one:null}),actions:{setList(t){t.forEach(e=>{e.status=="denied"?(e.formattedDate="Not Approved",e.duration=0):e.formattedDate=c(e.date).format("DD/MM/YYYY hh:mm a")}),this.list=t},setOne(t){t.created=c(t.created_at).format("DD/MM/YYYY hh:mm a"),t.formattedDate=c(t.date).format("DD/MM/YYYY hh:mm a"),this.one=t},_filterAdminList(t){var d,h;const e=f(),s=[],r=(h=(d=e.user)==null?void 0:d.managed_sections)!=null?h:[];t.forEach(i=>{let l=!1;r.forEach(g=>{var u;g.id==((u=i==null?void 0:i.student)==null?void 0:u.faculty_section)&&(l=!0)}),l&&s.push(i)}),this.setList(s)},_filterDataByRole(t){var s,r;const e=f();e.isAdmin?((r=(s=e.user)==null?void 0:s.managed_sections)==null?void 0:r.length)==0?(a.create("You don't have faculty sections, please contact super!"),this.list=[]):this._filterAdminList(t):this.setList(t)},async getAll(){await this.query("")},async query(t){this.working=!0;try{let e="/rewatch-requests?_sort=created_at:desc&_limit=-1";t.length>0&&(e+="&"+t);const s=await n.get(e,o());s.status==200?this._filterDataByRole(s.data):a.create("Error while getting rewatch requests from server")}catch(e){a.create("Error while getting  rewatch requests from server"),console.log(e)}this.working=!1},async getOne(t){this.working=!0;try{const e=await n.get("/rewatch-requests/"+t,o());e.status==200?this.setOne(e.data):a.create("Error while getting  rewatch request from server")}catch(e){a.create("Error while getting  rewatch request from server"),console.log(e)}this.working=!1},async update(t,e){this.working=!0;try{console.log("update called");const s=await n.put("/rewatch-requests/"+t.id,e,o());return s.status==200?(a.create("Updated!"),t.status!=null&&(t.status=="approved"||t.status=="denied")&&m({action:t.status=="approved"?"approvedRewatchRequest":"deniedRewatchRequest",student_id:s.data.student.id,req_id:t.id}),await n.put("/students/"+s.data.student.id,{},o()),this.setOne(s.data)):a.create("Error updating rewatch request"),s.data}catch(s){a.create("Error updating rewatch request"),console.log(s)}return this.working=!1,null}}});export{D as r};
